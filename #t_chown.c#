/**
 * tlpi Example 15-2
 * author:fanxiangchao
 **/

#include <pwd.h>
#include <grp.h>
#include <ctype.h>
#include <pwd.h>
#include <grp.h>
#include "tlpi_hdr.h"

/*
 * Return UID corresponding to 'name', or -1 on error
 */
uid_t userIdFromName(const char *name)
{
    struct passwd *pwd;
    uid_t u;
    char *endptr;

    if (name == NULL || *name == '\0')
    {
        return -1;
    }

    /* As a convenience to caller,allow a numeric string */
    u = strtol(name,&endptr,10);
    if (*endptr == '\0')
    {
        return u;
    }

    pwd = getpwnam(name);
    if (pwd == NULL)
    {
        return -1;
    }

    return pwd->pw_uid;
}

/*
 * Return GID corresponding to 'name', or -1 on error
 */
gid_t groupIdFromName(const char *name)
{
    struct group *grp;
    gid_t g;
    char *endptr;

    if (name == NULL || *name == '\0')
    {
        return -1;
    }

    g = strtol(name,&endptr,10);
    if (*endptr == '\0')
    {
        return g;
    }

    grp = getgrnam(name);
    if (grp == NULL)
    {
        return -1;
    }

    return grp->gr_gid;
}

int main(int argc,char *argv[])
{
    uid_t uid;
    gid_t gid;
    Boolean errEnd;

    if (argc < 3 || strcmp(argv[1],"--help") == 0)
    {
        usageErr("%s owner group [file...]\n"
                 "    owner or group can be '-',"
            "meaning leave unchanged\n",argv[0]);
    }

    if (strcmp(argv[1],"-") == 0)  /* "-" ==> don't change owner */
    {
        uid = -1;
    }
    else
    {
        uid = userIdFromName(argv[1]);    /* Turn user name into UID */
        if (uid == -1)
        {
            fatal("No such user (%s)",argv[1]);
        }
    }

    if (strcmp(argv[2],"-") == 0)   /* "-" ==> don't change group */
    {
        gid = -1;
    }
    else
    {
        gid = groupIdFromName(argv[2]);   /* Turn group name into GID */
        if (gid == -1)
        {
            fatal("No group user (%s)",argv[1]);
        }
    }

    /* Change ownership of all files named in remaining arguments */

    errEnd = FALSE;
    for (j = 3; j < argc; j++)
    {
        if (chown(argv[j],uid,gid) == -1)
        {
            errMsg("chown: %s",argv[j]);
            errEnd = TRUE;
        }
    }

    exit(errEnd ? EXIT_FAILURE : EXIT_SUCCESS);
}